<template>
	<view class="dialog-mask {{status==='hide' ? '-hide' : ''}}" style="z-index:{{zIndex}};" bindtap="_onMaskTap">
		<view class="dialog-panel" catchtap="_onContentTap">
			<view class="__title" wx:if="{{title}}">{{title}}</view>
			<view class="__content">
				<text wx:if="{{content}}" class="__content__text" decode="{{true}}">{{content}}</text>
				<slot></slot>
			</view>
			<view class="__btns">
				<slot wx:if="{{customBtns}}" name="btns"></slot>
				<block wx:else>
					<view wx:if="{{cancelBtn}}"
					      class="__btn -cancel {{cancelBtn!==true ? '-text' : ''}}"
					      bindtap="_onCancel">
						<app-icon wx:if="{{cancelBtn===true}}" name="cancel"></app-icon>
						<text wx:else>{{cancelBtn}}</text>
					</view>
					<view wx:if="{{confirmBtn}}"
					      class="__btn -confirm {{confirmBtn!==true ? '-text' : ''}}"
					      bindtap="_onConfirm">
						<app-icon wx:if="{{confirmBtn===true}}" name="confirm"></app-icon>
						<text wx:else>{{confirmBtn}}</text>
					</view>
				</block>
			</view>
		</view>
	</view>
</template>

<script>
	
	if (!$.Wui.Dialog) {
		$.Wui.Dialog = class {
			static async show(selectorOrOption, context = null) {
				if (!context)
					context = Page.current();
				let selector = !(selectorOrOption instanceof Object) ? selectorOrOption : '#dialog-common';
				let wuiDialog = context.selectComponent(selector);
				if (!wuiDialog)
					throw $.Err.FAIL(`找不到指定的对话框组件：${selector}`);
				if (selectorOrOption instanceof Object) {
					if (selectorOrOption.bindhelp)
						selectorOrOption.showHelpIcon = true;
					wuiDialog.setData($.extend(wuiDialog.data.defaultProperties, selectorOrOption));
				}
				return wuiDialog.show();
			}
			
			static hide(selector = null) {
				selector = selector || '#dialog-common';
				let wuiDialog = Page.current().selectComponent(selector);
				if (!wuiDialog)
					throw $.Err.FAIL(`找不到指定的对话框组件：${selector}`);
				wuiDialog.hide();
			}
		}
	}
	
	export default {
		config: {
			usingComponents: {
				'wui-icon': '@yapple/wui-icon',
				'app-icon': './icon'
			},
		},
		options: {
			multipleSlots: true
		},
		behaviors: [],
		properties: {
			title: {
				type: String
			},
			content: {
				type: String
			},
			confirmBtn: {
				type: null,
				value: true
			},
			cancelBtn: {
				type: null,
				value: false
			},
			showHelpIcon: {
				type: Boolean,
				value: false
			},
			customBtns: {
				type: Boolean,
				value: false
			}
		},
		data: {
			defaultProperties: {
				title: '',
				content: '',
				confirmBtn: true,
				cancelBtn: false,
				showHelpIcon: false,
				customBtns: false
			},
			zIndex: 1000,
			status: 'hide'
		},
		methods: {
			async show() {
				let _this = this;
				let zIndex = ($.AppData._zIndex || 1000) + 1;
				$.AppData._zIndex = zIndex;
				this.setData({ zIndex, status: 'show' });
				return new Promise((resolve, reject) => {
					_this._resolve = resolve;
					_this._reject = reject;
				});
			},
			
			hide(confirmed = false) {
				if (this._resolve)
					this._resolve(confirmed);
				this._resolve = null;
				this.setData({ status: 'hide' });
			},
			
			_onContentTap () {},
			
			_onConfirm() {
				this.hide(true);
			},
			
			_onCancel() {
				this.hide(false);
			},
			
			_onHelp() {
				if (this.data.bindhelp)
					this.data.bindhelp();
				else
					this.trigger('help');
			},
			
			_onMaskTap() {
				if (this.data.customBtns || this.data.confirmBtn || this.data.cancelBtn)
					return;
				this.hide();
			}
			
		}
	};
</script>

<style lang="less">
	@import "../../style";
	
	.dialog-mask {
		position: fixed;
		left: 0;
		top: 0;
		right: 0;
		bottom: 0;
		background: rgba(0,0,0,0.6);
		.cc;
	}
	.dialog-mask.-hide {
		display: none;
	}
	
	.dialog-panel {
		background: @color__darkGray;
		color: white;
		width: 655*@px;
		border-radius: 27*@px;
		display: flex;
		flex-flow: column nowrap;
		align-items: stretch;
		padding: 42*@px 50*@px;
		box-sizing: border-box;
		
		.__title {
			display: flex;
			align-items: center;
			margin-bottom: 42*@px;
			font-size: @fontSize__title;
			color: white;
			
			.__title__help {
				position: absolute;
				top: 0;
				bottom: 0;
				right: -60*@px;
				width: 60*@px;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				font-size: @fontSize__desc;
				color: @color__desc
			}
			
		}
		
		.__content {
			font-size: @fontSize__text;
		}
		
		.__btns {
			display: flex;
			flex-flow: row nowrap;
			justify-content: flex-end;
			align-items: center;
			font-size: 36*@px;
			margin-top: 42*@px;
			
			.__btn {
				width: 105*@px;
				height: 105*@px;
				display: flex;
				align-items: center;
				justify-content: center;
				margin-left: 20*@px;
			}
			
			.__btn.-cancel {
				border-radius: 50%;
				background: @color__purple;
			}
			
			.__btn.-confirm {
				border-radius: 50%;
				background: @color__num1;
			}
			
			.__btn.-text {
				width: auto;
				padding: 0 1em;
				border-radius: 27*@px;
			}
			
		}
		
	}
</style>