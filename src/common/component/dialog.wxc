<template>
	<wxc-popup animation-mode="none" align="center" locked="true" class="popup">
		<view class="wui-dialog" catchtap="_onContentTap">
			<view class="__title" wx:if="{{title}}">{{title}}</view>
			<view class="__content">
				<text wx:if="{{content}}" class="__content__text" decode="{{true}}">{{content}}</text>
				<slot></slot>
			</view>
			<view class="__btns">
				<view class="__btns__cancel" wx:if="{{cancelText===true}}" bindtap="_onCancel">
					<app-avatar name="cancel"></app-avatar>
				</view>
				<view class="__btns__cancel" wx:if="{{cancelText===true}}" bindtap="_onCancel">{{cancelText}}</view>
				<view class="__btns__confirm" wx:if="{{confirmText}}" bindtap="_onConfirm">{{confirmText}}</view>
			</view>
		</view>
	</wxc-popup>
</template>

<script>
	
	if (!$.Wui.Dialog) {
		$.Wui.Dialog = class {
			static async show(selectorOrOption) {
				let selector = !(selectorOrOption instanceof Object) ? selectorOrOption : '#dialog-common';
				let wuiDialog = Page.current().selectComponent(selector);
				if (!wuiDialog)
					throw $.Err.FAIL(`找不到指定的对话框组件：${selector}`);
				if (selectorOrOption instanceof Object) {
					if (selectorOrOption.bindhelp)
						selectorOrOption.showHelpIcon = true;
					wuiDialog.setData(selectorOrOption);
				}
				return wuiDialog.show();
			}
			
			static hide(selector = null) {
				selector = selector || '#dialog-common';
				let wuiDialog = Page.current().selectComponent(selector);
				if (!wuiDialog)
					throw $.Err.FAIL(`找不到指定的对话框组件：${selector}`);
				wuiDialog.hide();
			}
		}
	}
	
	export default {
		config: {
			usingComponents: {
				'wxc-popup': '@minui/wxc-popup',
				'wui-icon': '@yapple/wui-icon',
				'app-avatar': './avatar'
			}
		},
		behaviors: [],
		properties: {
			title: {
				type: String
			},
			content: {
				type: String
			},
			confirmText: {
				type: String,
				value: '确定'
			},
			cancelText: {
				type: String,
				value: '取消'
			},
			showHelpIcon: {
				type: Boolean,
				value: false
			}
		},
		data: {},
		methods: {
			async show() {
				let _this = this;
				
				let popupComponent = this.selectComponent('.popup');
				if (!popupComponent)
					return null;
				popupComponent.show();
				
				this.selectComponent('#wxc-dialog').show();
				return new Promise((resolve, reject) => {
					_this._resolve = resolve;
					_this._reject = reject;
				});
			},
			
			hide(confirmed = false) {
				if (this._resolve)
					this._resolve(confirmed);
				this._resolve = null;
				let popupComponent = this.selectComponent('.popup');
				popupComponent && popupComponent.hide();
			},
			
			_onContentTap () {},
			
			_onConfirm() {
				this.hide(true);
			},
			
			_onCancel() {
				this.hide(false);
			},
			
			_onHelp() {
				if (this.data.bindhelp)
					this.data.bindhelp();
				else
					this.trigger('help');
			}
			
		}
	};
</script>

<style lang="less">
	@import "../../style";
	
	.wui-dialog {
		background: @color__darkGray;
		width: 655px;
		border-radius: 27px;
		display: flex;
		flex-flow: column nowrap;
		align-items: stretch;
		padding-top: 42px 50px;
		
		.__title {
			display: flex;
			align-items: center;
			margin-bottom: 42px;
			font-size: @fontSize__title;
			color: white;
			
			.__title__help {
				position: absolute;
				top: 0;
				bottom: 0;
				right: -60px;
				width: 60px;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				font-size: @fontSize__desc;
				color: @color__desc
			}
			
		}
		
		.__content {
			font-size: @fontSize__text;
			color: white;
		}
		
		
		.__btns {
			display: flex;
			flex-flow: row nowrap;
			justify-content: flex-end;
			align-items: center;
			font-size: 36px;
			
			.__btns__cancel {
				width: 105px;
				height: 105px;
				border-radius: 50%;
				display: flex;
				align-items: center;
				justify-content: center;
				background: @color__purple;
				color: white;
			}
			
			.__btns__confirm {
				width: 105px;
				height: 105px;
				border-radius: 50%;
				display: flex;
				align-items: center;
				justify-content: center;
				background: @color__num1;
				color: white;
			}
			
		}
		
	}
</style>