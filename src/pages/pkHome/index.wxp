<template>
	<view class="page__banner" bindtap="onBannerClicked">
		<app-avatar class="__elem __avatar" src="{{$.me.avatar}}" mode="round-square"></app-avatar>
		<view class="__elem __name">
			{{$.me.name}}
			<view wx:if="{{player.effects.Nick}}" class="__nickname">显示名称：{{player.effects.Nick.detail.nickname}}</view>
		</view>
		<app-pk-player-state class="__elem __status" match="{{match}}" state="{{player.state}}"></app-pk-player-state>
	</view>
	<view class="pkhome__week">当前为本赛季第{{match.week + 1}}周</view>
	<view wx:if="{{!player || (player.state_confirmed && !player.state)}}" class="cc pkhome__menu">
		<block wx:if="{{playerLastSeason && match.week < match.detail.begin_weeks}}">
			<text class="__item">由于你参加过上一赛季的比赛，你可以选择</text>
			<wxc-button class="__item" size="large"
			            btn-style="{{$.style.button.large}} {{$.style.button.primary}}"
			            bind:submit="onInheritButtonClicked">继承上一赛季的段位
			</wxc-button>
			<text class="__item">或</text>
			<wxc-button class="__item" size="large"
			            btn-style="{{$.style.button.large}} {{$.style.button.secondary}}"
			            bind:submit="onPlayInitButtonClicked">重新进行定级赛
			</wxc-button>
		</block>
		<block wx:else>
			<text class="__item">要加入PK赛，你可以选择</text>
			<wxc-button class="__item" size="large"
			            btn-style="{{$.style.button.large}} {{$.style.button.primary}}"
			            bind:submit="onPlayInitButtonClicked">开始定级赛
			</wxc-button>
		</block>
	</view>
	<view wx:else class="pkhome__gridmenu">
		<wxc-button btn-style="{{gridMenuItemStyle}} background:{{$.style.color.num1}}"
		            bind:submit="onNormalPlayButtonClicked">
			<app-icon class="__icon" name="pkNormal"></app-icon>
			<view>常规赛</view>
		</wxc-button>
		<wxc-button btn-style="{{gridMenuItemStyle}} background:{{$.style.color.num2}}"
		            bind:submit="onFriendlyPlayButtonClicked">
			<app-icon class="__icon" name="pkFriendly"></app-icon>
			<view>友谊赛</view>
		</wxc-button>
		<wxc-button btn-style="{{gridMenuItemStyle}} background:{{$.style.color.num3}}"
		            bind:submit="onShopButtonClicked">
			<app-icon class="__icon" name="store"></app-icon>
			<view>道具商店</view>
		</wxc-button>
		<wui-abnor wx:if="{{!player.state && !player.state_confirmed}}"
		           class="__abnor" error="PK_INIT_GAME_UNCONFIRMED"
		></wui-abnor>
		<wui-abnor wx:elif={{!player.state_confirmed}}
		           class="__abnor" error="PK_UNCONFIRMED"
		></wui-abnor>
	</view>
	<view class="pkhome__tabs">
		<app-tab default-index="0"
		         active-text-color="#108ee9"
		         active-line-color="none"
		         line-color="none"
		         component-id="c1"
		         animate="{{true}}">
			<wxc-tab-panel tab-index="0" component-id="c1" label="段位表">
				<wui-content id="content-player-list">
					<app-playerlist wx:for="{{players}}" wx:key="index" wx:for-item="player"
					                match="{{match}}" index="{{index}}" player="{{player}}"
					                mode="{{index===players.length-1?'last':''}}"
					></app-playerlist>
				</wui-content>
			</wxc-tab-panel>
			<wxc-tab-panel tab-index="1" component-id="c1" label="赛况历史">
				<view class="play-list__filters">
					<app-switch checked="{{playFilter.onlyThisWeek}}"
					            label="仅显示本周的比赛"
					            bindchange="onPlayFilterOnlyThisWeekChanged"
					></app-switch>
					<app-switch checked="{{playFilter.onlyMe}}"
					            label="仅显示我参与的比赛"
					            bindchange="onPlayFilterOnlyMeChanged"
					></app-switch>
				</view>
				<wui-content id="content-play-list">
					<app-playlist wx:for="{{plays}}" wx:key="index" wx:for-item="play" match="{{match}}"
					              play="{{play}}"></app-playlist>
				</wui-content>
			</wxc-tab-panel>
			<wxc-tab-panel tab-index="2" component-id="c1" label="本周榜单">
				<wui-content id="content-weekly-list">
					<view class="weekly-list__title">场高分榜</view>
					<view class="weekly-list__content">
						<block wx:for="{{weeklyList.playscore}}" wx:key="index">
							<view wx:for="{{item.player}}" wx:key="index2" wx:for-index="index2" wx:for-item="player"
							      class="__item">
								<app-avatar class="__avatar" src="{{player.avatar}}"></app-avatar>
								<image class="__award" src="/images/award{{index}}.png"></image>
								<pk-player-name class="__name" player="{{player}}"></pk-player-name>
								<view class="__value">{{item.value}}分</view>
							</view>
						</block>
						<view wx:if="{{!weeklyList.playscore.length}}" class="__item">
							<app-avatar class="__avatar" src="../../images/unknown-avatar.jpg"></app-avatar>
							<view class="__name">虚位以待</view>
						</view>
					</view>
					<view class="weekly-list__title">局高分榜</view>
					<view class="weekly-list__content">
						<block wx:for="{{weeklyList.gamescore}}" wx:key="index">
							<view wx:for="{{item.player}}" wx:key="index2" wx:for-index="index2" wx:for-item="player"
							      class="__item">
								<app-avatar class="__avatar" src="{{player.avatar}}"></app-avatar>
								<image class="__award" src="/images/award{{index}}.png"></image>
								<pk-player-name class="__name" player="{{player}}"></pk-player-name>
								<view class="__value">{{item.value}}分</view>
							</view>
						</block>
						<view wx:if="{{!weeklyList.gamescore.length}}" class="__item">
							<app-avatar class="__avatar" src="../../images/unknown-avatar.jpg"></app-avatar>
							<view class="__name">虚位以待</view>
						</view>
					</view>
					<view class="weekly-list__title">分屏榜</view>
					<view class="weekly-list__content">
						<block wx:for="{{weeklyList.split}}" wx:key="index">
							<view wx:for="{{item.player}}" wx:key="index2" wx:for-index="index2" wx:for-item="player"
							      class="__item">
								<app-avatar class="__avatar" src="{{player.avatar}}"></app-avatar>
								<image class="__award" src="/images/award{{index}}.png"></image>
								<pk-player-name class="__name" player="{{player}}"></pk-player-name>
								<view class="__value">{{item.value}}个</view>
							</view>
						</block>
						<view wx:if="{{!weeklyList.split.length}}" class="__item">
							<app-avatar class="__avatar" src="../../images/unknown-avatar.jpg"></app-avatar>
							<view class="__name">虚位以待</view>
						</view>
					</view>
				</wui-content>
			</wxc-tab-panel>
		</app-tab>
	</view>
	
	<wui-dialog id="dialog-inherit-promote" title="继承段位" confirm-btn="继承" cancel-btn="再想想">
		<app-pk-player-state match="{{lastSeasonMatch}}" state="{{playerLastSeason.state}}"></app-pk-player-state>
		<text>↓</text>
		<app-pk-player-state match="{{match}}" state="{{inheritCalc}}"></app-pk-player-state>
	</wui-dialog>
	<wui-dialog id="dialog-inherit-success" title="成功继承段位">
		当前段位：
		<app-pk-player-state match="{{match}}" state="{{inheritCalc}}"></app-pk-player-state>
	</wui-dialog>
	<app-notify-rank-up id="notify-PK_RANK_UP" match="{{match}}"></app-notify-rank-up>
	<app-notify-achieve id="notify-ACHIEVE_GET"></app-notify-achieve>
</template>

<script>
	import PkPlay from '../../models/PkPlay';
	import Player from '../../models/Player';
	import Play from '../../models/Play';
	import Notify from '../../models/Notify';
	import Match from '../../models/Match';
	
	const pkrule = require('../../pkrules');
	
	export default {
		auth: true,
		config: {
			navigationBarTitleText: 'PK赛首页 - 加载中',
			enablePullDownRefresh: true,
			usingComponents: {
				'wxc-button': '@minui/wxc-button',
				'wxc-tab': '@minui/wxc-tab',
				'wxc-tab-panel': '@minui/wxc-tab/panel',
				'wxc-notice': '@minui/wxc-notice',
				'wui-dialog': '../../common/component/dialog',
				'wui-abnor': '@yapple/wui-abnor',
				'wui-icon': '@yapple/wui-icon',
				'wui-content': '@yapple/wui-content',
				'app-icon': '../../common/component/icon',
				'app-pk-player-state': '../../common/component/pk-player-state',
				'app-playlist': '../../common/component/playlist',
				'app-playerlist': '../../common/component/playerlist',
				'app-tab': '../../common/component/tab',
				'app-avatar': '../../common/component/avatar',
				'app-switch': '../../common/component/switch',
				'app-notify-rank-up': '../../common/component/notify-rank-up',
				'app-notify-achieve': '../../common/component/notify-achieve',
				'app-painter': '../../common/component/painter',
				'pk-player-name': '../../common/component/pk/player-name',
			},
		},
		data: {
			match: null,
			player: null,
			playerLastSeason: null,
			pkrule: pkrule,
			showConfirmNotice: false,
			playFilter: {
				onlyThisWeek: true,
				onlyMe: false,
			},
			gridMenuItemStyle: `
				width: 250rpx;
				height: 200rpx;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				color: white;
				border: none;
				border-radius: 0;
				font-size: ${$.AppData.style.fontSize.text};`,
			painterTpl: null,
		},
		
		onLoad() {
			console.log ('pkHome load');
			$.Wui.content('content-player-list').bindLoad(this.loadPlayerList);
			$.Wui.content('content-play-list').bindLoad(this.loadPlayList);
			$.Wui.content('content-weekly-list').bindLoad(this.loadWeeklyList);
		},
		
		async onShow() {
			console.log ('pkHome show');
			// 检查是否有未完成录入的比赛，若有，则提示之
			let playing = wx.getStorageSync('pk');
			if (playing) {
				var r = await $.Modal.show('回到比赛', '您有尚未完成录入的比赛，是否继续完成录入？', {
					confirmBtn: '继续录入',
					cancelBtn: '放弃',
				});
				if (!r)
					wx.removeStorageSync('pk');
				else
					Page.navigateTo({ url: playing.url });
			}
			
			// 获取当前赛季的比赛信息
			let match = Match.get('pk')[0];
			if (!match || match.status !== 'active') {
				wx.setNavigationBarTitle({ title: 'PK赛关闭中' });
				throw $.Err.NO_RESOURCE('当前没有正在进行的赛季');
			}
			wx.setNavigationBarTitle({ title: match.name });
			
			// 获取当前用户在本赛季中的选手信息
			let playerMe = await Player.getInMatch(match, $.AppData.me);
			
			// 如需要，获取当前用户在上赛季中的选手信息（用于判断段位继承）
			let playerLastSeason = (playerMe && playerMe.state) ? null :
				await Player.getInMatch(Match.get('pk')[1], $.AppData.me);
			if (playerLastSeason && !playerLastSeason.state)
				playerLastSeason = null;
			this.setData({
				match, playerLastSeason,
				player: playerMe,
				lastSeasonMatch: Match.get('pk')[1],
			});
			
			// 加载其他内容
			$.Wui.content('content-player-list').load();
			$.Wui.content('content-play-list').load();
			$.Wui.content('content-weekly-list').load();
			
			this.showNotifications();
			
		},
		
		async onInheritButtonClicked(e) {
			try {
				$.Modal.showBusy('正在加载');
				this.setData({ 'inheritCalc': await PkPlay.calcInherit() });
				$.Modal.hideToast();
				let r = await $.Wui.Dialog.show('#dialog-inherit-promote');
				if (!r)
					return;
				
				$.Modal.showBusy('正在处理');
				await PkPlay.joinByInherit();
				$.Modal.hideToast();
				await $.Wui.Dialog.show('#dialog-inherit-success');
				this.reloadPage();
			} catch (ex) {
				$.Modal.showError('继承段位', ex);
			}
		},
		async onPlayInitButtonClicked(e) {
			let r = await $.Modal.show('开始定级赛',
				`今天是本赛季的第${this.data.match.week + 1}周，` +
				`将按${this.data.match.is_begin ? '赛季初' : '赛季中'}的规则计算初始段位`,
				{
					confirmBtn: '开始',
					cancelBtn: '再想想',
				},
			);
			if (!r)
				return;
			try {
				await Player.create(this.data.match);
				wx.navigateTo({ url: '../pkInit/index' });
			} catch (ex) {
				$.Modal.showError('开始定级赛', ex);
			}
		},
		async onNormalPlayButtonClicked(e) {
			$.Http.submit(e);
			if (!this.data.player.state_confirmed) {
				$.Modal.show('开启常规赛', '前一场比赛尚未被确认，无法开启新赛');
				return;
			}
			let players = [];
			for (let player of this.data.players) {
				if (player.state &&
					player.state_confirmed &&
					player.id !== this.data.player.id &&
					Math.abs(this.data.player.state['rank'] - player.state['rank']) < 2)
					players.push(player);
			}
			let opponent = await Page.navigateToDialog({
				url: '../pkplayerselector/index',
				data: {
					title: '选择对手',
				},
				richData: { players },
			});
			if (!opponent)
				return;
			let r = await $.Modal.show('开始常规赛', `确认选择${opponent.name}作为对手？`, {
				cancelBtn: true,
			});
			if (!r) return;
			Page.navigateTo({
				url: '../pkPlay/index',
				richData: { me: this.data.player, type: 'Normal', opponent },
			});
		},
		async onFriendlyPlayButtonClicked(e) {
			$.Http.submit(e);
			if (!this.data.player.state_confirmed) {
				$.Modal.show('开启友谊赛', '前一场比赛尚未被确认，无法开启新赛');
				return;
			}
			let players = [];
			for (let player of this.data.players) {
				if (player.state &&
					player.state_confirmed &&
					player.id !== this.data.player.id &&
					this.data.player.state['rank'] !== player.state['rank'])
					players.push(player);
			}
			let opponent = await Page.navigateToDialog({
				url: '../pkplayerselector/index',
				data: {
					title: '选择对手',
				},
				richData: { players },
			});
			if (!opponent)
				return;
			let r = await $.Modal.show('开始友谊赛', `确认选择${opponent.name}作为对手？`, {
				cancelBtn: true,
			});
			if (!r) return;
			Page.navigateTo({
				url: '../pkPlay/index',
				richData: { me: this.data.player, type: 'Friendly', opponent },
			});
		},
		onShopButtonClicked(e) {
			$.Http.submit(e);
			Page.navigateTo({
				url: '../pkShop/index',
			});
		},
		onPlayFilterOnlyThisWeekChanged(e) {
			let playFilter = this.data.playFilter;
			playFilter.onlyThisWeek = e.detail.value;
			this.setData({ playFilter });
			$.Wui.content('content-play-list').load();
		},
		onPlayFilterOnlyMeChanged(e) {
			let playFilter = this.data.playFilter;
			playFilter.onlyMe = e.detail.value;
			this.setData({ playFilter });
			$.Wui.content('content-play-list').load();
		},
		async loadPlayerList() {
			let players = await Player.getPlayers(this.data.match);
			players.sort((a, b) => {
				if (a.state['rank'] < b.state['rank'])
					return 1;
				if (a.state['rank'] > b.state['rank'])
					return -1;
				if (a.state['stars'] < b.state['stars'])
					return 1;
				if (a.state['stars'] > b.state['stars'])
					return -1;
				if (a.state['coins'] < b.state['coins'])
					return 1;
				if (a.state['coins'] > b.state['coins'])
					return -1;
				return 0;
			});
			this.setData({ players });
		},
		async loadPlayList() {
			let filters = {};
			if (this.data.playFilter.onlyThisWeek)
				filters.from_week = this.data.match.week;
			if (this.data.playFilter.onlyMe && this.data.player)
				filters.play_by = this.data.player.id;
			let plays = await Play.getPlays(this.data.match, filters);
			plays.reverse();
			if (!plays.length)
				throw $.Err.NO_RECORD();
			
			/*if (playTodo) {
				await $.Modal.show('确认比赛', '有一场比赛等待你的确认。');
				Page.navigateTo({
					url: '/pages/pkResult/index',
					data: {
						id: playTodo.id
					}
				});
			}*/
			this.setData({ plays });
		},
		async loadWeeklyList() {
			let weeklyList = await PkPlay.getWeeklyList();
			this.setData({ weeklyList });
		},
		async showNotifications() {
			let notifications = await Notify.get('pkHome');
			for (let notification of notifications) {
				let component = this.selectComponent(`#notify-${notification.identifier}`);
				if (component)
					await component.show(notification.detail, this.data.player);
				else
					console.warn('No component found for notification: ' + notification.identifier);
				await notification.markAsRead();
			}
		},
		onBannerClicked() {
			Page.navigateTo({
				url: '/pages/pkPlayer/index',
				data: {
					id: this.data.player.id,
					match: this.data.player.match,
				},
			});
		},
		onShareAppMessage(e) {
			console.log(e);
			return $.AppData.share;
		},
	};
</script>

<style lang="less">
	@import "../../style";
	
	page {
		background: white;
	}
	.page {
		.fix-page;
	}
	
	.page__banner {
		
		.__status {
			text-align: right;
		}
		
		.__nickname {
			font-size: 0.8em;
			color: @color__subDesc;
		}
	}
	
	
	.pkhome__week {
		font-size: @fontSize__desc;
		color: @color__desc;
		text-align: center;
		padding: 36px 0;
	}
	
	.pkhome__menu {
		position: relative;
		padding: 27 rpx;
		z-index: 10;
		background: white;
		font-size: @fontSize__desc;
		color: @color__desc;
		
		.__item {
			margin-bottom: 27px;
		}
	}
	
	.pkhome__gridmenu {
		position: relative;
		display: flex;
		
		.__icon {
			font-size: 2em;
		}
		
		.__abnor {
			position: absolute;
			left: 0;
			top: 0;
			right: 0;
			bottom: 0;
			background: rgba(255, 255, 255, 0.85);
		}
	}
	
	.pkhome__tabs {
		flex: 1;
		overflow: hidden;
	}
	
	.pkhome__playerlist__desc {
		text-align: center;
		font-size: @fontSize__desc;
		color: @color__desc;
		padding: 20px;
	}
	
	.play-list__filters {
		display: flex;
		justify-content: space-around;
		padding: 25px 15px;
	}
	
	.weekly-list__title {
		text-align: center;
		font-size: @fontSize__desc;
		color: @color__desc;
		margin: 80px 0 30px 0;
	}
	
	.weekly-list__content {
		display: flex;
		justify-content: space-around;
		margin: 30px 0;
		
		.__item {
			display: flex;
			flex-direction: column;
			align-items: center;
			position: relative;
			padding-top: 20px;
			
			.__avatar {
				width: 120px;
				height: 120px;
			}
			
			.__award {
				position: absolute;
				width: 80px;
				height: 80px;
				top: -20px;
				right: -20px;
				transform: rotate(30deg);
			}
			
			.__name {
				font-size: @fontSize__text;
				color: @color__text;
				margin-top: 10px;
			}
			
			.__value {
				font-size: @fontSize__text;
				color: @color__text;
			}
			
			.__date {
				font-size: @fontSize__desc;
				color: @color__desc;
			}
			
		}
		
	}

</style>
