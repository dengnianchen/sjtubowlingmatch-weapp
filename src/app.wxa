<template>
	<view>
		<layout-loading wx:if="{{loading}}"></layout-loading>
		<layout-error wx:if="{{loadingError}}" error="{{loadingError}}" bindclick="reloadPage"></layout-error>
		<page></page>
	</view>
	<wui-dialog id="dialog-common"></wui-dialog>
</template>

<script>
	
	require('welib');
	require('./error');
	
	const MatchList = require('./models/MatchList');
	const User = require('./models/User');
	
	const style = require('./style');
	const config = require('./config');
	const enums = require('./enum');
	
	export default {
		config: {
			usingComponents: {
				'layout-loading': 'layout/loading',
				'layout-error': 'layout/error',
				'wui-dialog': 'common/component/dialog'
			},
			pages: [],
			window: {
				backgroundTextStyle: 'dark',
				backgroundColor: '#efefef',
				navigationBarBackgroundColor: '#ffffff',
				navigationBarTitleText: '上海交通大学保龄赛事中心',
				navigationBarTextStyle: 'black',
			},
			networkTimeout: {
				request: 10000,
			},
			tabBar: {
				color: '#999999',
				selectedColor: '#00B26A',
				list: [
					{
						pagePath: 'pages/home/index',
						text: '首页',
						iconPath: '/images/home.png',
						selectedIconPath: '/images/home-active.png'
					},
					{
						pagePath: 'pages/judgehome/index',
						text: '裁判',
						iconPath: '/images/user.png',
						selectedIconPath: '/images/user-active.png'
					}
				],
			},
		},
		globalData: {
			style, config, enums
		},

		/**
		 * 定制页面加载过程，在页面加载前载入全局配置信息、检查登陆状态及用户信息完善状态
		 * @param {Page}    page    正要加载的页面
		 * @return {Promise<boolean>}
		 * @author Deng Nianchen
		 */
		async beforePageLoad(page) {
			let redirectToBind = async () => await Page.redirectTo({
				url: '../bind/index',
				data: { from: page.getPath() }
			});
			
			// 1. 若当前不存在全局配置信息，则先加载之
			//    全局配置信息存在app对象中，因此仅在小程序运行后的第一个页面加载时需要从服务器获取
			if (!this.isAppInitialized) {
				//$($.AppData.config).extend(await $.Http.request("/common/config"));
				$.AppData.matches = await MatchList.getList();
				this.isAppInitialized = true;
			}
			
			// 2. 尝试登陆并获取绑定的用户信息
			//    前提条件：当前页面需要登录才能访问，且当前用户不存在
			//    若登陆失败或当前微信账号没有绑定赛事中心账号，则跳转到登陆绑定页面
			if (page.auth && !$.AppData.me) {
				try {
					await $.Http.login();
				} catch (ex) {
					if (ex.is($.Err.LOGIN_FAIL))
						await redirectToBind();
					return false;
				}
				$.AppData.me = User.current;
				if (!$.AppData.me) {
					await redirectToBind();
					return false;
				}
			}
		},
		
		onLaunch() {
			// 初始化Welib库
			$.initial(this);
		},
		onShow() { },
		onHide() { },
	};
</script>

<style lang="less">
	@import "style";
	
	page {
		background-color: @backgroundColor;
		height: 100%;
		font-size: @fontSize__text;
		line-height: 1.5;
		font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;
	}
	
	.page__banner {
		display: flex;
		align-items: center;
		background: white;
		border-bottom: 1px solid @splitLineColor;
		padding: 10px;
	}
	.page__banner__elem {
		margin-right: 10px;
	}
	.page__banner__elem__last {
		flex-grow: 1;
	}
	
	.page__hd {
		padding: 80px;
	}
	.page__bd {
		padding-bottom: 80px;
	}
	.page__bd_spacing {
		padding-left: 30px;
		padding-right: 30px;
	}
	
	.page__ft{
		padding-bottom: 20px;
		text-align: center;
	}
	
	.page__title {
		text-align: left;
		font-size: @fontSize__title;
		font-weight: 400;
		color: @mainHeadingColor;
	}
	
	.page__desc {
		margin-top: 10px;
		font-size: @fontSize__desc;
		color: @subHeadingColor;
		text-align: left;
	}
	
	.cc {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
	}
	
	.wxc-dialog-content {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		padding: 0 20px 20px 20px;
		font-size: @fontSize__desc;
		color: @color__desc;
	}

</style>
