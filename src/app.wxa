<template>
	<view class="page">
		<layout-loading wx:if="{{loading}}" text="{{loading}}"></layout-loading>
		<layout-error wx:if="{{loadingError}}" error="{{loadingError}}" bindclick="reloadPage"></layout-error>
		<page></page>
	</view>
	<wui-dialog id="dialog-common"></wui-dialog>
	<wui-dialog id="dialog-update-info" title="版本已更新~" content="{{$.updateInfo}}"></wui-dialog>
</template>

<script>
	
	require('welib');
	require('./error');
	
	const Match = require('./models/Match');
	const Item = require('./models/Item');
	const User = require('./models/User');
	const Version = require('./models/Version');
	
	const style = require('./style');
	const config = require('./config');
	const enums = require('./enums');
	const versions = require('./versions');
	
	let launchInitialized = false;
	
	async function InitializeApp() {
		// 当前小程序的版本号
		let clientVersion = new Version(versions[0].id);
		// 上次启动的版本号，用以判断是否首次使用新版本
		let lastLoginVersionId = wx.getStorageSync('version');
		let lastLoginVersion = lastLoginVersionId ?
			new Version(lastLoginVersionId) : null;
		// 当前服务器端的版本号，用以判断小程序是否为测试版
		let serverVersion = await Version.getServerVersion();
		if (!wx.getStorageSync('forceDeploy') &&
			Version.compare(clientVersion, serverVersion) > 0) {
			// 若客户端版本高于服务器端版本，则切换使用测试服务器（test_match）
			// forceDeploy可指定是否强制使用线上服务器
			$.AppData.isTest = true;
			$.Http._initial({ host: $.AppData.config.testHost });
		}
		if (lastLoginVersion && Version.compare(lastLoginVersion, clientVersion) < 0) {
			// 若上次启动的版本号低于当前版本号，则认为当前为新版本的首次使用
			$.AppData.updateInfo = versions[0].content;
		}
		wx.setStorageSync('version', clientVersion.id);
		await Match.loadAll();
		await Item.loadAll();
	}
	
	export default {
		config: {
			usingComponents: {
				'layout-loading': 'layout/loading',
				'layout-error': 'layout/error',
				'wui-dialog': 'common/component/dialog'
			},
			pages: [],
			window: {
				backgroundTextStyle: 'dark',
				backgroundColor: '#efefef',
				navigationBarBackgroundColor: '#ffffff',
				navigationBarTitleText: '保保开赛',
				navigationBarTextStyle: 'black',
			},
			networkTimeout: {
				request: 10000,
			},
			tabBar: {
				color: '#959DAD',
				selectedColor: '#454F63',
				list: [
					{
						pagePath: 'pages/home/index',
						text: 'PK赛',
						iconPath: '/images/pk-inactive.png',
						selectedIconPath: '/images/pk.png'
					},
					{
						pagePath: 'pages/judgehome/index',
						text: '裁判',
						iconPath: '/images/judge-inactive.png',
						selectedIconPath: '/images/judge.png'
					}
				],
			},
		},
		globalData: {
			style, config, enums
		},

		/**
		 * 定制页面加载过程，在页面加载前载入全局配置信息、检查登陆状态及用户信息完善状态
		 * @param {Page}    page    正要加载的页面
		 * @return {Promise<boolean>}
		 * @author Deng Nianchen
		 */
		async beforePageLoad(page) {
			if (!launchInitialized) {
				await InitializeApp();
				launchInitialized = true;
			}
			let redirectToBind = async (wxAuth) => await Page.redirectTo({
				url: '../bind/index',
				data: { from: page.getPath(), wxAuth }
			});
			
			// 1. 尝试登陆并获取绑定的用户信息
			//    前提条件：当前页面需要登录才能访问，且当前用户不存在
			//    若登陆失败或当前微信账号没有绑定赛事中心账号，则跳转到登陆绑定页面
			if (page.auth && !$.AppData.me) {
				try {
					await $.Http.login(true);
				} catch (ex) {
					if (ex.is($.Err.LOGIN_FAIL))
						await redirectToBind(false);
					return false;
				}
				$.AppData.me = User.current;
				if (!$.AppData.me) {
					await redirectToBind(true);
					return false;
				}
			}
			
			// 2. 若有更新内容提示，则显示对话框
			if ($.AppData.updateInfo)
				page.selectComponent('#dialog-update-info').show();
			
		},
		
		onShow() { },
		onHide() { },
	};
</script>

<style lang="less">
	@import "style";
	
	page {
		background-color: @color__background;
		height: 100%;
		font-size: @fontSize__text;
		color: @color__text;
		line-height: 1.5;
		font-family: -apple-system-font,Helvetica Neue,Helvetica,sans-serif;
	}
	
	.page__banner {
		display: flex;
		align-items: center;
		background: white;
		height: 136px;
		padding: 0 0 0 20px;
		
		.__elem {
			margin-right: 20px;
		}
		
		.__avatar {
			width: 96px;
			height: 96px;
		}
		
		.__name {
			flex-grow: 1;
		}
		
	}
	
	.page__hd {
		padding: 80px;
	}
	.page__bd {
		padding-bottom: 80px;
	}
	.page__bd_spacing {
		padding-left: 30px;
		padding-right: 30px;
	}
	
	.page__ft{
		padding-bottom: 20px;
		text-align: center;
	}
	
	.page__title {
		text-align: left;
		font-size: @fontSize__title;
		font-weight: 400;
		color: @mainHeadingColor;
	}
	
	.page__desc {
		margin-top: 10px;
		font-size: @fontSize__desc;
		color: @subHeadingColor;
		text-align: left;
	}

	.wxc-dialog-content {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		padding: 0 20px 20px 20px;
		font-size: @fontSize__desc;
		color: @color__desc;
	}
	
	/*swtich样式-start*/
	/*swtich整体大小*/
	.wx-switch-input {
		width: 2em !important;
		height: 1em !important;
	}
	
	/*白色样式（false的样式）*/
	.wx-switch-input::before {
		width: 80px !important;
		height: 36px !important;
		background: #3ACCE1;
		color: #3ACCE1;
	}
	
	/*绿色样式（true的样式）*/
	.wx-switch-input::after {
		width: 40px !important;
		height: 36px !important;
		background: #FF5777;
		color: #FF5777;
	}
	
	/*swtich样式end*/


</style>
